package reversiassignment;

import java.util.Set;

import reversiassignment.Board.Cellstate;

public class MiniMax {
	private Helper helper;
	private Cellstate maximisingPlayer;
	private Cellstate minimisingPlayer;

	public MiniMax(Helper h, Cellstate m) {
		helper = h;
		maximisingPlayer = Cellstate.BLACK;
		minimisingPlayer = Cellstate.WHITE;
	}

	private int getScore(Board board) {
		int score = 0;
		Cellstate[][] b = board.getBoard();
		for (int i = 0; i < Board.SIZE; i++) {
			for (int j = 0; j < Board.SIZE; i++) {
				if (b[i][j] == maximisingPlayer)
					score++;
				else if (b[i][j] == minimisingPlayer)
					score--;
			}
		}
		return score;
	}

	private Position minimax(Board board, Cellstate currPlayer) {
		// Get possible positions
		Set<Position> pos = board.getAdjs();
		// generate children
		int score = Integer.MIN_VALUE;
		Set<Position> flips;
		for (Position p : pos) {
			Board newBoard = new Board(board.getBoard(), pos);
		}
		//recurse on children
		return null;
	}

}
