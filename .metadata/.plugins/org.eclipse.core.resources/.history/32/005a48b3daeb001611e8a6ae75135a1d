package reversiassignment;

import java.util.LinkedList;
import java.util.List;
import java.util.Set;

import reversiassignment.Board.Cellstate;

public class GameNode {
	Position pos;
	Board board;
	Cellstate currPlayer;
	List<GameNode> children;

	public GameNode(Board b, Position pos, Cellstate currPlayer) {
		this.pos = pos;
		board = b;
		this.currPlayer = currPlayer;
		children = new LinkedList<GameNode>();
		List<GameNode> children = new LinkedList<GameNode>();
		Set<Position> possibleMoves = b.getAdjs();
		for (Position p : possibleMoves) {
			Set<Position> flips = helper.evaluateMove(p, currPlayer, b);
			if (!flips.isEmpty()) {
				Board newBoard = new Board(b.getBoard(), possibleMoves);
				newBoard.placeMarker(p, currPlayer);
				newBoard.flipMarkers(flips, currPlayer);
				children.add(new GameNode(newBoard, p, currPlayer));
			}
		}

	}
}
