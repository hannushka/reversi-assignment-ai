package reversiassignment;

import java.util.Iterator;
import java.util.Set;

import reversiassignment.Board.Cellstate;

public class Game {
	private Board board;
	private Helper helper;
	private int scoreW, scoreB;
	private PlayerAI player1, player2;

	public Game() {
		board = new Board();
		helper = new Helper();
		player1 = new PlayerAI(Cellstate.BLACK, 2, board);
		player2 = new PlayerAI(Cellstate.WHITE, 2, board);
	}

	public void play() {
		System.out.print(board.toString()); //Print board
		PlayerAI currentPlayer = player1;
		while (!board.gameOver()) {
			int flips = currentPlayer.playerMove(); //Player makes move
			calcScore(flips+1,currentPlayer.getColor());
			System.out.print(board.toString()); //Print new board
			System.out.println("Score: B-" + scoreB + " W-" + scoreW);
			(currentPlayer == player1) ? currentPlayer = player2 : currentPlayer = player1; //next player
		}
	}
	
	private void calcScore(int nbrOfFlips, Cellstate player) {
		if (player == Cellstate.BLACK) { 
			scoreB += 1 + nbrOfFlips;
			scoreW -= nbrOfFlips;
		} else {
			scoreW += 1 + nbrOfFlips;
			scoreB -= nbrOfFlips;
		}
	}

	public static void main(String[] args) throws InterruptedException {
		new Game().play();
	}
}