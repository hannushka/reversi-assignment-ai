package reversiassignment;

import java.util.Iterator;
import java.util.Set;

import reversiassignment.Board.Cellstate;

public class Game {
	private Board board;
	private Helper helper;
	private int scoreW, scoreB;

	public Game() {
		board = new Board();
		helper = new Helper();
		scoreW = 2;
		scoreB = 2;
	}

	public void play() {
		System.out.print(board.toString()); //Print board
		Cellstate player = Cellstate.BLACK;
		while (!board.gameOver()) {
			playerMove(player); //Player makes move
			System.out.print(board.toString()); //Print new board
			System.out.println("Score: B-" + scoreB + " W-" + scoreW);
			//Next player
			if (player == Cellstate.BLACK)
				player = Cellstate.WHITE;
			else
				player = Cellstate.BLACK;
		}
	}

	private void playerMove(Cellstate player) {
		// Player is choosing position for next move
		Iterator<Position> itr1 = board.getAdjs().iterator();
		Set<Position> flips;
		Position p;
		do {
			p = itr1.next();
			flips = helper.evaluateMove(p, player, board);
		} while (flips.isEmpty() && itr1.hasNext());
		// Placing and flipping
		if (!flips.isEmpty()) {
			System.out.println("Player " + player + " placed marker at " + p.toString());
			board.placeMarker(p, player);
			board.flipMarkers(flips, player);
			calcScore(flips.size(),player);
		}
	}
	
	private void calcScore(int nbrOfFlips, Cellstate player) {
		if (player == Cellstate.BLACK) { 
			scoreB += 1 + nbrOfFlips;
			scoreW -= nbrOfFlips;
		} else {
			scoreW += 1 + nbrOfFlips;
			scoreB -= nbrOfFlips;
		}
	}

	public static void main(String[] args) throws InterruptedException {
		new Game().play();
	}
}